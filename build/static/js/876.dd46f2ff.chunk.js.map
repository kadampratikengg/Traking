{"version":3,"file":"static/js/876.dd46f2ff.chunk.js","mappings":"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","sources":["pages/Profile.js","services/toasterService.js","services/userService.js","../node_modules/@mui/icons-material/ClearRounded.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { userService } from '../services/userService'\nimport { toastService } from '../services/toasterService'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { update } from '../store/reducers/user.js'\nimport { deepOrange, deepPurple } from '@mui/material/colors';\n\n\n// material-ui\nimport {\n    Input,\n    Avatar,\n    Grid,\n    Button,\n    Typography,\n    Container,\n    Box,\n    Paper,\n    TextField\n} from '@mui/material';\nimport { useParams } from 'react-router-dom';\n\nimport ClearRoundedIcon from '@mui/icons-material/ClearRounded';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\n\nconst label = { inputProps: { 'aria-label': 'Checkbox demo' } };\n\n\n// ============================|| FIREBASE - LOGIN ||============================ //\n\nfunction useMUI(useFormObject) {\n    const register = (name, options) => ({\n        ...useFormObject.register(name, options),\n        InputLabelProps: { shrink: !!useFormObject.watch(name) }\n    });\n    return {\n        ...useFormObject,\n        register\n    };\n}\n\nconst profilePicStyles = {\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: '16px',\n        // border: '2px solid #1677ff',\n        borderRadius: '5px',\n        margin: 'auto',\n        width: '12em',\n        padding: 0,\n    },\n    avatar: {\n        width: '80px', // Adjust the width as needed\n        height: '80px', // Adjust the height as needed\n        // border: '0.1px solid #808080'\n    },\n    input: {\n        display: 'none',\n    },\n    button: {\n        marginTop: '24px', // Adjust the margin as needed\n    },\n    caption: {\n        fontSize: '12px', // Adjust the font size as needed\n        color: 'rgba(0, 0, 0, 0.54)', // Adjust the color as needed\n        marginTop: '8px', // Adjust the margin as needed\n    }\n};\n\nconst UserForm = ({ userId, handleClose }) => {\n    const [user, setUser] = useState({});\n    const currentUser = useSelector((state) => state.user.user);\n    const dispatch = useDispatch();\n\n\n    const params = useParams();\n\n    const { handleSubmit, register, formState: { errors }, watch, control, reset } = useMUI(useForm({\n        mode: \"onChange\",\n        defaultValues: {\n            email: user?.email,\n            name: user.name\n        }\n    }));\n\n    // upload profile picture\n    const handleFileChange = async (event) => {\n        const file = event.target.files[0];\n        const formData = new FormData();\n        formData.append('profile', file);\n        const response = await userService.updateProfile(params.id, formData);\n        if (response) {\n            toastService.success('Profile picture updated successfully');\n            dispatch(update(\n                { ...currentUser, 'profilePicture': response.profilePicture }\n            ))\n            setUser(response);\n        }\n        event.target.value = '';\n    };\n\n    // remove profile picture\n    const removePicture = async () => {\n        const response = await userService.removeProfilePicture(params.id);\n        if (response) {\n            toastService.success('Profile picture removed successfully');\n            console.log(response);\n            dispatch(update(\n                { ...currentUser, 'profilePicture': response.profilePicture }\n            ))\n\n            setUser(response);\n        }\n\n    }\n\n\n    useEffect(() => {\n        const fetchUsers = async () => {\n            try {\n                const response = await userService.getUser(params.id);\n                setUser(response);\n                reset(response)\n            } catch (error) {\n                // Handle error\n            }\n        };\n        fetchUsers();\n    }, []);\n\n    const onSubmit = async (data) => {\n        const response = await userService.updateUser(params.id, data);\n        if (response) {\n            toastService.success('user updated successfully');\n            dispatch(update(\n                { ...currentUser, 'name': response.name, 'email': response.email, 'phone': response.phone }\n            ));\n            setUser(response);\n        }\n        // You can perform further actions here, like submitting data to an API\n    };\n\n    return (\n        <>\n            <Container>\n                <Paper sx={{\n                    m: 0,\n                    px: 2,\n                    py: 2,\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignItems: 'center',\n                    justifyContent: 'space-evenly',\n                    borderRadius: \"6px\"\n                }} elevation={0}>\n                    <Grid container alignItems=\"center\" spacing={2}>\n                        <Grid item sm={6} >\n                            <div style={profilePicStyles.root}>\n                                {user.profilePicture && <Box\n                                    sx={{\n                                        width: '100%',\n                                        display: 'flex',\n                                        flexDirection: 'row-reverse',\n                                        mt: 1\n                                    }}>\n                                    <Tooltip title=\"Remove-Picture\">\n                                        <IconButton onClick={removePicture}>\n                                            <ClearRoundedIcon style={{ color: 'gray' }} sx={{}} />\n                                        </IconButton>\n                                    </Tooltip>\n                                </Box>}\n                                <Avatar\n                                    alt=\"Profile Picture\"\n                                    src={user.profilePicture}\n                                    sx={{fontSize: '2rem' }}\n                                    style={profilePicStyles.avatar}\n                                >\n                                </Avatar>\n                                <Input\n                                    type=\"file\"\n                                    inputProps={{ accept: 'image/*' }}\n                                    style={profilePicStyles.input}\n                                    id=\"profile-pic-upload\"\n                                    onChange={handleFileChange}\n                                />\n                                <label htmlFor=\"profile-pic-upload\">\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        component=\"span\"\n                                        style={profilePicStyles.button}\n                                    >\n                                        Upload Profile Picture\n                                    </Button>\n                                </label>\n                                <Typography style={profilePicStyles.caption}>\n                                    Max file size: 2MB\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item sm=\"6\">\n                            <Box>\n                                <Typography variant=\"h6\" color='primary'>UPDATE USER</Typography>\n                            </Box>\n                            <form style={{ width: '100%', marginTop: 4 }} onSubmit={handleSubmit(onSubmit)} noValidate>\n                                <TextField\n                                    sx={{ mt: 2 }}\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    // required\n                                    fullWidth\n                                    id=\"username\"\n                                    label=\"name\"\n                                    name=\"name\"\n                                    {...register(\"name\", { required: true })}\n                                    // autoComplete=\"email\"\n                                    autoFocus\n                                    size=\"small\"\n                                    error={!!errors?.name}\n                                    helperText={errors?.name && 'Name is required'}\n                                />\n                                <TextField\n                                    sx={{ mt: 2 }}\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    // required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"email\"\n                                    name=\"email\"\n                                    {...register(\"email\", {\n                                        required: 'Email is required',\n                                        pattern: {\n                                            value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                                            message: 'Please enter a valid email',\n                                        }\n                                    },)}\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                    size=\"small\"\n                                    error={!!errors?.email}\n                                    helperText={errors?.email && errors.email.message}\n                                />\n                                <TextField\n                                    sx={{ mt: 2 }}\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    // required\n                                    fullWidth\n                                    id=\"phone\"\n                                    label=\"phone\"\n                                    name=\"phone\"\n                                    {...register(\"phone\", {\n                                        required: 'Phone is required',\n                                        pattern: {\n                                            value: /^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/i,\n                                            message: 'Please enter a valid phone number',\n                                        }\n                                    },)}\n                                    autoFocus\n                                    size=\"small\"\n                                    error={!!errors?.phone}\n                                    helperText={errors?.phone && errors.phone.message}\n                                />\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    sx={{ mt: 2 }}\n                                >\n                                    Update\n                                </Button>\n                            </form>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Container>\n        </>\n    );\n};\n\n\n\nexport default UserForm;\n","import { toast } from 'react-toastify';\n\nconst success = (msg) =>{\n    toast.success(msg);\n}\n\nconst error = (msg) =>{\n    toast.error(msg);\n}\n\nexport const toastService = {\n    success,\n    error\n}","import { del, get, patch, post } from './http/httpMethods'\nimport { toastService } from '../services/toasterService'\n\n\nfunction addPosition(payload) {\n    return post('/hire', payload).then((response) => {\n        return response;\n    }).catch((err) => console.log(err));\n}\n\nfunction getUsers(query) {\n    return get(`/user${query ? `?search=${query}` : ``}`).then((response) => {\n        return response;\n    })\n}\n\nfunction getUser(userId) {\n    return get(`/user/${userId}`).then((response) => {\n        return response;\n    })\n}\n\nfunction updateUser(userId,payload) {\n    return patch(`/user/${userId}`,payload).then((response) => {\n        return response;\n    })\n}\n\nfunction updatePassword(userId,payload){\n    return patch(`/user/password/${userId}`,payload).then((response) => {\n        return response;\n    }).catch((err)=>{\n        console.log(err);\n        if(err.response.data.code<500){\n            toastService.error(err.response.data.message);\n        }else{\n            toastService.error(\"Something went wrong\");\n        }\n\n    })\n}\n\nfunction updateProfile(userId,payload) {\n    return patch(`/user/profile-picture/${userId}`,payload).then((response) => {\n        return response;\n    })\n}\n\nfunction removeProfilePicture(userId) {\n    return del(`/user/profile-picture/${userId}`).then((response) => {\n        return response;\n    })\n}\n\nexport const userService = {\n    addPosition,\n    getUsers,\n    getUser,\n    updateUser,\n    updateProfile,\n    updatePassword,\n    removeProfilePicture\n}","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18.3 5.71a.9959.9959 0 0 0-1.41 0L12 10.59 7.11 5.7a.9959.9959 0 0 0-1.41 0c-.39.39-.39 1.02 0 1.41L10.59 12 5.7 16.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l4.89 4.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z\"\n}), 'ClearRounded');\nexports.default = _default;"],"names":["profilePicStyles","root","display","flexDirection","alignItems","justifyContent","marginTop","borderRadius","margin","width","padding","avatar","height","input","button","caption","fontSize","color","_ref","userId","handleClose","useFormObject","_useState","useState","_useState2","_slicedToArray","user","setUser","currentUser","useSelector","state","dispatch","useDispatch","params","useParams","_useMUI","useForm","mode","defaultValues","email","name","_objectSpread","register","options","InputLabelProps","shrink","watch","handleSubmit","errors","formState","reset","control","handleFileChange","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","file","formData","response","wrap","_context","prev","next","target","files","FormData","append","userService","id","sent","toastService","update","profilePicture","value","stop","_x","apply","arguments","removePicture","_ref3","_callee2","_context2","console","log","useEffect","fetchUsers","_ref4","_callee3","_context3","t0","onSubmit","_ref5","_callee4","data","_context4","phone","_x2","_jsx","_Fragment","children","Container","Paper","sx","m","px","py","elevation","_jsxs","Grid","container","spacing","item","sm","style","Box","mt","Tooltip","title","IconButton","onClick","ClearRoundedIcon","Avatar","alt","src","Input","type","inputProps","accept","onChange","htmlFor","Button","variant","component","Typography","noValidate","TextField","fullWidth","label","required","autoFocus","size","error","helperText","pattern","message","autoComplete","success","msg","toast","addPosition","payload","post","then","catch","err","getUsers","query","get","concat","getUser","updateUser","patch","updateProfile","updatePassword","code","removeProfilePicture","del","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}